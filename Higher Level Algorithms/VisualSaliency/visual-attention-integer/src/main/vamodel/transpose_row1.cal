package main.vamodel;

import std.header.Parameter.*;


actor transpose_row1() int coeffStream ==> int coeffStream_tr: 
	int width = SUB1_WIDTH;
	int height = IM_HEIGHT;
	
	int  coeffBuffer[height][width];
	
	int countX := 0;
	int countY := 0;	
	getCoeffValue: action coeffStream:[Val] repeat width ==>  	
	do	
		foreach int count in 0 .. width-1
		do
			coeffBuffer[countX][count] := Val[count];											
		end							
		countX := countX + 1; 				
	end
	
	doneCountX: action ==>
	guard countX = height
	do
		countX := 0;		
	end
				
	sendCoeffValue: action ==> coeffStream_tr:[outVal] repeat height
	var int outVal[height]   	
	do		
		foreach int i in 0 .. height-1
		do
			outVal[i] := coeffBuffer[i][countY];  			 
		end						      	
		countY := countY + 1;										
	end
	
	doneCountY: action ==>
	guard countY = width
	do
		countY := 0;			
	end 
	 
	schedule fsm s0:
		s0 (getCoeffValue ) --> s0;
		s0 (doneCountX ) --> s1;		
		s1 (sendCoeffValue) --> s1;
		s1 (doneCountY) --> s0;	
	end
	
	priority 
		doneCountX > getCoeffValue;
		doneCountY > sendCoeffValue;
	end	

end